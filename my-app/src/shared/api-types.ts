/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/equipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["searchEquipments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCarThumbnails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCar"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars/{id}/color-image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCarColorImage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SignupRequest: {
            username: string;
            email: string;
            password: string;
        };
        LoginRequest: {
            username: string;
            password: string;
        };
        LoginResponse: {
            token?: string;
            /** Format: int64 */
            userId?: number;
            username?: string;
            email?: string;
        };
        EquipmentDto: {
            /** Format: int64 */
            id: number;
            code: string;
            description: string;
        };
        CarThumbnailDto: {
            /** Format: int64 */
            carId: number;
            name: string;
            productionDate: string;
            color: string;
        };
        CarDto: {
            /** Format: int64 */
            id: number;
            vin: string;
            manufacturer: string;
            model: string;
            bodyStyleCode: string;
            steering: string;
            facelift: boolean;
            /** Format: date-time */
            productionDate: string;
            colorDto: components["schemas"]["ColorDto"];
            upholstery: components["schemas"]["Upholstery"];
            /** Format: int32 */
            powerInKw: number;
            /** Format: float */
            displacementInLiter: number;
            /** Format: int32 */
            doorsCount: number;
            transmission: string;
            drive: string;
            equipments: components["schemas"]["Equipment"][];
        };
        ColorDto: {
            /** Format: int64 */
            id: number;
            code: string;
            name: string;
            manufacturer: string;
        };
        Equipment: {
            /** Format: int64 */
            id?: number;
            code?: string;
            description?: string;
            descriptionDe?: string;
            manufacturer?: string;
        };
        Upholstery: {
            /** Format: int64 */
            id?: number;
            code?: string;
            manufacturer?: string;
            name?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    signup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LoginResponse"];
                };
            };
        };
    };
    searchEquipments: {
        parameters: {
            query: {
                search: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["EquipmentDto"][];
                };
            };
        };
    };
    getCarThumbnails: {
        parameters: {
            query?: {
                equipmentCodes?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CarThumbnailDto"][];
                };
            };
        };
    };
    getCar: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CarDto"];
                };
            };
        };
    };
    getCarColorImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
}
